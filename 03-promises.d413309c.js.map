{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAMMC,GAJaC,SAASC,cAAc,uBACxBD,SAASC,cAAc,sBACrBD,SAASC,cAAc,wBAC/BD,SAASC,cAAc,UACtBD,SAASC,cAAc,SACpCF,EAAKG,iBAAiB,UAItB,SAAkBC,GAChBA,EAAMC,iBAKN,IAJA,IAAIC,EAAaC,OAAOP,EAAKQ,SAASC,MAAMC,OACxCC,EAAYJ,OAAOP,EAAKQ,SAASI,KAAKF,OACtCG,EAASN,OAAOP,EAAKQ,SAASK,OAAOH,OAEhCI,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAEhCC,EAAcD,EADNR,GAAcQ,EAAI,GAAKH,E,IAKnC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvBC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAI,CACFK,SAAAR,EACAP,MAAAQ,IAGFG,EAAI,CAAEI,SAAAR,EAAUP,MAAAQ,G,GAEjBA,E,IAEFQ,MAAK,SAAAC,IAQV,SAAyBF,EAAUG,GAC1BC,EAAA9B,GAAS+B,OAAOC,QAAQ,qBAAoCC,OAAfP,EAAS,QAAYO,OAANJ,EAAM,M,CARrEK,CADeN,EAARF,SAAeE,EAALjB,M,IAGlBwB,OAAM,SAAAP,IASX,SAAyBF,EAAUU,GAC1BN,EAAA9B,GAAS+B,OAAOM,QAAQ,oBAAmCJ,OAAfP,EAAS,QAAYO,OAANG,EAAM,M,CATpEE,CADgBV,EAARF,SAAeE,EAALjB,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayValue = document.querySelector('input[name=\"delay\"]');\nconst stepValue = document.querySelector('input[name=\"step\"]');\nconst amountValue = document.querySelector('input[name=\"amount\"]');\nconst btn = document.querySelector('button');\nconst form = document.querySelector('form');\nform.addEventListener('submit', onSubmit);\n\nlet delay = 0;\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  let firstDelay = Number(form.elements.delay.value);\n  let stepDelay = Number(form.elements.step.value);\n  let amount = Number(form.elements.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    delay = firstDelay + (i - 1) * stepDelay;\n    createPromise(i, delay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        res({\n          position,\n          delay,\n        });\n      } else {\n        rej({ position, delay });\n      }\n    }, delay);\n  })\n    .then(({ position, delay }) => {\n      notifingSuccess(position, delay);\n    })\n    .catch(({ position, delay }) => {\n      notifingFailure(position, delay);\n    });\n}\n\nfunction notifingSuccess(position, delay) {\n  return Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction notifingFailure(position, delay) {\n  return Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","event","preventDefault","firstDelay","Number","elements","delay","value","stepDelay","step","amount","i","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","res","rej","setTimeout","Math","random","position","then","param","delay4","$parcel$interopDefault","Notify","success","concat","$ce04d3a99e08e73b$var$notifingSuccess","catch","delay5","failure","$ce04d3a99e08e73b$var$notifingFailure"],"version":3,"file":"03-promises.d413309c.js.map"}