{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAMMC,GAJaC,SAASC,cAAc,uBACxBD,SAASC,cAAc,sBACrBD,SAASC,cAAc,wBAC/BD,SAASC,cAAc,UACtBD,SAASC,cAAc,SAepC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvBC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAI,CACFK,SAAAR,EACAS,MAAAR,IAGFG,EAAI,CAAEI,SAAAR,EAAUS,MAAAR,G,GAEjBA,E,IAEFS,MAAK,SAAAC,IAQV,SAAyBH,EAAUC,GAC1BG,EAAAlB,GAASmB,OAAOC,QAAQ,qBAAoCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,CARrEO,CADeL,EAARH,SAAeG,EAALF,M,IAGlBQ,OAAM,SAAAN,IASX,SAAyBH,EAAUC,GAC1BG,EAAAlB,GAASmB,OAAOK,QAAQ,oBAAmCH,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,CATpEU,CADgBR,EAARH,SAAeG,EAALF,M,IA/BxBb,EAAKwB,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAMC,iBAKN,IAJA,IAAIC,EAAaC,OAAO5B,EAAK6B,SAAShB,MAAMiB,OACxCC,EAAYH,OAAO5B,EAAK6B,SAASG,KAAKF,OACtCG,EAASL,OAAO5B,EAAK6B,SAASI,OAAOH,OAEhCI,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAG,CAEnC/B,EAAc+B,EADFP,GAAcO,EAAI,GAAKH,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayValue = document.querySelector('input[name=\"delay\"]');\nconst stepValue = document.querySelector('input[name=\"step\"]');\nconst amountValue = document.querySelector('input[name=\"amount\"]');\nconst btn = document.querySelector('button');\nconst form = document.querySelector('form');\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  let firstDelay = Number(form.elements.delay.value);\n  let stepDelay = Number(form.elements.step.value);\n  let amount = Number(form.elements.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    let delay = firstDelay + (i - 1) * stepDelay;\n    createPromise(i, delay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        res({\n          position,\n          delay,\n        });\n      } else {\n        rej({ position, delay });\n      }\n    }, delay);\n  })\n    .then(({ position, delay }) => {\n      notifingSuccess(position, delay);\n    })\n    .catch(({ position, delay }) => {\n      notifingFailure(position, delay);\n    });\n}\n\nfunction notifingSuccess(position, delay) {\n  return Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction notifingFailure(position, delay) {\n  return Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","res","rej","setTimeout","Math","random","position","delay","then","param","$parcel$interopDefault","Notify","success","concat","$ce04d3a99e08e73b$var$notifingSuccess","catch","failure","$ce04d3a99e08e73b$var$notifingFailure","addEventListener","event","preventDefault","firstDelay","Number","elements","value","stepDelay","step","amount","i"],"version":3,"file":"03-promises.f93d60d4.js.map"}